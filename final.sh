#!/bin/bash

#By: Riley Fuligni
#For: COMP2101


# This script is for the COMP2101 course at georgian college.
#It is supposed to be able to:

#Test if bind is installed, and install it if it is not installed.
#Get a domain name from the script user. Complain and exit if the domain already exists.
#Create a zone file for the new domain.
#Use 127.0.0.1 as the IP address for the name ns1 in the new domain. Use that as the name of the nameserver for the domain.
#Add the name www with the address 192.168.47.91 to the domain.
#Add the name mail with the address 192.168.59.5 to the domain.
#Set the origin of the domain to be ns1 in the domain and the domain admin email to be hostmaster@thedomainname.
#Create reverse zone files for the 192.168 addresses we have used.
#Add your new zones to the named.conf.local file if they aren't already there.
#Reload bind and test that nslookup successfully finds the new names using your private nameserver.

###########
#Script
###########

#checks for root access
echo "Checking for root access..."
if [ `id -u` != "0" ]; then
	echo "You need to be root for parts of this script to run properly."
	echo "Please try using sudo and restarting this script."
	exit 1
fi
echo "SUCCESS!"
echo ""

#checks is bind is installed
echo "Checking if Bind is installed..."
if [[ `dpkg-query -W -f='${Status} ${Version}\n' bind9` != install* ]]; then
    echo "You do not have bind installed."
    echo "Installing bind9..."
    sudo apt-get install bind9 bind9utils
fi
echo "SUCCESS!"
echo ""

#asks user for a domain name to be used
read -p "Please enter in a domain name to use: " domain
#Test to see if domain names are valid
if [[ $domain = "" ]] ;then 
    echo "You need to enter in a valid domain name, please restart the script and input a valid domain name."
    exit 1
fi
#Check to see if the domain already exists
if [[ `find /etc/bind/db.$domain` = /etc/bind/db.$domain ]] &> /dev/null; then
    echo "That zone file already exists, please specify a zone that does not exist."
    exit 1
fi


#create the zone file for the domain name
echo "Creating zone file..."
cd /etc/bind
cp db.empty db.$domain
sed -i -e "s/; BIND reverse data file for empty rfc1918 zone/; Zone file for the $domain domain/" db.$domain
sed -i -e "s/; DO NOT EDIT THIS FILE - it is used for multiple zones./;/" db.$domain
sed -i -e "s/; Instead, copy it, edit named.conf, and use that copy./; This is generated by a script/" db.$domain
sed -i -e "s/localhost./ns1.$domain./" db.$domain
sed -i -e "s/root.localhost./hostmaster.$domain./" db.$domain
echo -e "ns1\tIN\tA\t127.0.0.1" >> db.$domain
echo -e "www\tIN\tA\t192.168.47.91" >> db.$domain
echo -e "mail\tIN\tA\t192.168.59.5" >> db.$domain
echo "Zone file created."

#create reverse lookup files
echo "Creating reverse lookup files..."
cp db.empty db.192.168.47
sed -i -e "s/; BIND reverse data file for empty rfc1918 zone/; Reverse lookup file for the 47.168.192.in-addr.arpa/" db.192.168.47
sed -i -e "s/; DO NOT EDIT THIS FILE - it is used for multiple zones./;/" db.192.168.47
sed -i -e "s/; Instead, copy it, edit named.conf, and use that copy./; This is generated by a script/" db.192.168.47
sed -i -e "s/localhost./ns1.$domain./" db.192.168.47
sed -i -e "s/root.localhost./hostmaster.$domain./" db.192.168.47
echo -e "91\tIN\tPTR\twww.$domain." >> db.192.168.47

#create second reverse lookup files
cp db.empty db.192.168.59
sed -i -e "s/; BIND reverse data file for empty rfc1918 zone/; Reverse lookup file for the 59.168.192.in-addr.arpa/" db.192.168.59
sed -i -e "s/; DO NOT EDIT THIS FILE - it is used for multiple zones./;/" db.192.168.59
sed -i -e "s/; Instead, copy it, edit named.conf, and use that copy./; This is generated by a script/" db.192.168.59
sed -i -e "s/localhost./ns1.$domain./" db.192.168.59
sed -i -e "s/root.localhost./hostmaster.$domain./" db.192.168.59
echo -e "5\tIN\tPTR\tmail.$domain." >> db.192.168.59
echo "Reverse lookup files created."

#add zones to the named.conf.local file
echo "Adding new zones to the named.conf.local file..."
echo -e "zone \"$domain\" {\n\ttype master;\n\tfile \"/etc/bind/db.$domain\";\n};" >> named.conf.local
echo "" >> named.conf.local
echo -e "zone \"47.168.192.in-addr.arpa\" {\n\ttype master;\n\tfile \"/etc/bind/db.192.168.47\";\n};" >> named.conf.local
echo "" >> named.conf.local
echo -e "zone \"59.168.192.in-addr.arpa\" {\n\ttype master;\n\tfile \"/etc/bind/db.192.168.59\";\n};" >> named.conf.local
echo "Zones added."
echo ""

#reload the bind server
echo "Reloading the bind server..."
if [[ `rndc reload` = "server reload successful" ]] &> /dev/null; then
    echo "DNS server reload successful"
else
    echo "DNS server reload failed, please get your system adminstrator to check your DNS configuraton file"
    exit 1
fi
echo ""

#check the new zones to verify they are working correctly
echo "Checking if ns1 is configured correctly..."
if [[ "nslookup ns1.$domain localhost" = *"server can't find ns1.$domain"* ]]; then
    echo "Cannot find ns1, please contact your system adminstrator."
    exit 1
fi
echo "SUCCESS!"
echo ""

echo "Checking if www is configured correctly..."
if [[ "nslookup www.$domain localhost" = *"server can't find www.$domain"* ]]; then
    echo "Cannot find www, please contact your system adminstrator."
    exit 1
fi
echo "SUCCESS!"
echo ""

echo "Checking if mail is configured correctly..."
if [[ "nslookup mail.$domain localhost" = *"server can't find mail.$domain"* ]]; then
    echo "Cannot find mail, please contact your system adminstrator."
    exit 1
fi
echo "SUCCESS!"
echo ""

#Checking reverse lookup files
echo "Checking if reverse lookup file for www is configured correctly..."
if [[ "nslookup 192.168.47.91 localhost" = *"server can't find 192.168"* ]]; then
    echo "Cannot reverse lookup for www, please contact your system adminstrator."
    exit 1
fi
echo "SUCCESS!"
echo ""

echo "Checking if reverse lookup file for mail is configured correctly..."
if [[ "nslookup 192.168.59.5 localhost" = *"server can't find 192.168"* ]]; then
    echo "Cannot reverse lookup for mail, please contact your system adminstrator."
    exit 1
fi
echo "SUCCESS!"
echo ""

echo "All zones were created successfully and verified to be working. Thanks for using this script."
exit 0